local user_progress = require "game.common.user_progress"
local levels_holder = require "game.common.levels_holder"
local messages = require "game.common.messages"


local function current_level()
    return levels_holder:get_level_by_index(user_progress:current_level_index())
end

function init(self)
    msg.post(".", "acquire_input_focus")
    self.txt_current_level = gui.get_node("txt_current_level")
    self.txt_bonus_words = gui.get_node("txt_bonus_words")
    self.btn_skip_level = gui.get_node("btn_skip_level")
    self.txt_skip_level = gui.get_node("txt_skip_level")
    msg.post("/game/grid#grid_gui", messages.CREATE_LEVEL_GRID)
end

function on_message(self, message_id, message, sender)
    if message_id == messages.USER_PROGRESS_CHANGED then
        gui.set_text(self.txt_current_level, "Level " .. current_level().name)
        gui.set_text(self.txt_bonus_words, "Bonus words: " .. message.total_bonus_words)
    end
end

local function skip_level()
    user_progress:set_next_level()
    msg.post("/game/grid#grid_gui", messages.CREATE_LEVEL_GRID)
end

function on_input(self, action_id, action)
    if action_id == hash("touch") then
        local inside_skip_button = gui.pick_node(self.btn_skip_level, action.x, action.y)
        if action.pressed and inside_skip_button then
            gui.animate(self.btn_skip_level, gui.PROP_SCALE, vmath.vector3(0.85), gui.EASING_LINEAR, 0.07)
            sound.play("/main#sound_click", {pan = 0.0})
        elseif action.released then
            gui.animate(self.btn_skip_level, gui.PROP_SCALE, vmath.vector3(1), gui.EASING_LINEAR, 0.07)
            if inside_skip_button then
                skip_level()
            end
        end
    end
end
